{{>layout/header}}

        <div class="right_col" role="main">
          <div class="row">
            <div class="col-md-12">
              <div class="x_panel"> 
                <div class="x_title"> 
                  <h2>HOME > 데이터 분석 > 분석 환경 관리 > 분석 이미지 등록</h2>
                  <div class="clearfix"> </div>
                </div>
                <div class="x_content"> <br>
                  <div class="row"> 
                    <div class="metatable_box col-6">
                      <h4 class="center_title">분석 이미지 이름</h4>
                      <div class="form-group row">
                        <label class="control-label">분석 이미지명 <span class="red bold">*</span></label>
                        <div class="form-control_box duplicate_box">
                          <input class="form-control" type="text" name="image_nm" id="image_nm" placeholder="분석 이미지명 입력">
                          <button class="btn btn-danger btn-sm" onclick="analysisImagesNmDupChk();">중복조회</button>
                        </div>
                      </div>
                      <h4 class="center_title">도커 이미지</h4>
                      <div class="row"> 
                        <div class="table_responsive">
                        	<div class="form-group row">
		                      <label class="control-label">도커 이미지명 <span class="red bold">*</span></label>
		                      <div class="form-control_box duplicate_box">
		                        <input class="form-control" type="text" name="docker_image_nm" id="docker_image_nm" placeholder="도커 이미지명 입력" onkeypress="enterkey(event);">
		                        <button class="btn btn-primary btn-sm" onclick="dockerImagesGet();">조회</button>
		                      </div>
		                    </div>
		                    <table class="table table-striped">
		                      <colgroup> 
		                        <col width="55px">
		                      </colgroup>
		                      <thead>
		                        <tr> 
		                          <th>선택</th>
		                          <th>도커 이미지명<span class="red bold">*</span></th>
		                        </tr>
		                      </thead>
		                      <tbody id="dockerImage">
		                      </tbody>
		                    </table>
                  		</div>
                      </div>
                    </div>
                    <div class="metatable_box col-5 col-lg-6">
                      <h4 class="center_title">분석 이미지 사용 용도</h4>
                      <div class="form-group row">
                        <table class="table table-bordered bulk_action table_center" id="sandboxTable">
                       <colgroup> 
                         <col width="50%">
                       </colgroup>
                       <thead>
                         <tr id="anals_use_prpos_cd_radio"> 
                         </tr>
                         <tr id="anals_use_prpos_cd">
                         </tr>
                       </thead>
                     </table>
                      </div>
                      <h4 class="center_title">도커 이미지 프로그램</h4>
                      <div class="row"> 
                        <div class="table_responsive">
		                    <table class="table table-striped">
		                      <colgroup> 
		                        <col width="35%">
		                        <col width="25%">
		                        <col width="20%">
		                        <col width="20%">
		                      </colgroup>
		                      <thead>
		                        <tr> 
		                          <th>프로그램명</th>
		                          <th>버젼</th>
		                          <th>포트 유무</th>
		                          <th>기본 포트</th>
		                        </tr>
		                      </thead>
		                      <tbody id="docker_image_program">
		                      </tbody>
		                    </table>
		                  </div>
                      </div>
                    </div>
                  </div>
                  <div class="right_btns mt-4"> 
                    <button class="btn btn-primary" onclick="analysisImagesInsert();">등록</button>
                    <button class="btn btn-danger" onclick="jsList();">뒤로</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
{{>layout/footer}}        

<script>
const commonUrl = '/sandbox/common';
const url = '/sandbox/env/analysisImage';

let duplicateYn = '';		//중복 체크 여부

//분석 이미지명 변경시 중복 체크 값 초기화
$('#image_nm').on('keyup', function(){
	duplicateYn = '';
});

//분석_사용_용도_코드
const commonCodeAnalysisUsePurpose = function (){
	const data = {
       		url: '/services/sandbox/common-code/analysis-usage',
        };		
        $.ajax({
            type: 'POST',
            url: commonUrl+'/commonCodeAnalysisUsePurpose',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(data),
            async: false
        }).done(function (data) {
 		  	if (data != null) {
 		  	   	if(data.contents != ""){
 		  	   		 $("#anals_use_prpos_cd_radio").empty();
					 $("#anals_use_prpos_cd").empty();
    				 let radioOp = '';
    				 let insertTr = '';
	    	   		 $.each(data.contents, function (idx, el) {
	    	   			radioOp += '<th>';
	    	   			radioOp += '	<input id="radio'+idx +'" type="radio" name="anals_use_prpos_cd" value="'+el.dtl_code+'"';
	    	   			if(idx==0){
	    	   				radioOp += ' checked';
	    	   			}
	    	   			radioOp += '>';
	    	   			radioOp += '</th>';
	    	   			insertTr += '<th>'+el.dtl_code_nm+'</th>'
	 	     	     });
		 	     	 $("#anals_use_prpos_cd_radio").append(radioOp);        	
		 	     	 $("#anals_use_prpos_cd").append(insertTr);        	
 		  	   	}
 		  	}
        }).fail(function (error) {
            alert(JSON.stringify(error));
        });
}

//분석 이미지명 중복 확인
const analysisImagesNmDupChk = function (){
	let image_nm = $("#image_nm").val();
	if(image_nm == '') {
        alert('분석 이미지명을 입력하세요!');
        $("#image_nm").focus();
        return true;
    }
	
	const data = {
       		url: '/services/sandbox/analysis-images/name/dup-check?image_nm='+image_nm,
       		user_id: 'user00',	
       		menu_id: 'menu_id',
        };
	
    $.ajax({
        type: 'POST',
        url: url+'/analysisImagesNmDupChk',
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        data: JSON.stringify(data),
    }).done(function (data) {
 	if (data != null) {
 	   	if(data.contents.duplicated){
 	   		duplicateYn = 'Y';
 	   		alert("동일한 분석 이미지명이 있습니다.");
 	   		$("#image_nm").focus();
 	   	}else{
 	   		duplicateYn = 'N';
	   		alert("사용 가능합니다.");
 	   	}
 	}
    }).fail(function (error) {
        alert(JSON.stringify(error));
    });
    
}

//분석 이미지 등록
const analysisImagesInsert = function (){
	let image_nm = $('#image_nm').val();
	let docker_image_id = $('input:radio[name="docker_image_id"]:checked').val();
	let anals_use_prpos_cd = $('input:radio[name="anals_use_prpos_cd"]:checked').val();
	
	if(!docker_image_id){
		alert("도커 이미지를 선택하세요.");
		return;
	}
	
	const data = {
   		url: '/services/sandbox/analysis-images/enroll',
   		user_id: 'user00',	
   		menu_id: 'menu_id',
   		creator_id: 'creator',
   		modifier_id: 'modifier_id',
   		image_nm: image_nm,
   		docker_image_id: docker_image_id,
   		anals_use_prpos_cd: anals_use_prpos_cd,
    };
	
	if(duplicateYn != 'N'){
		if(duplicateYn == 'Y'){
			alert("동일한 분석 이미지명이 있습니다.");
		}else{
			alert("중복 체크를 해주세요.");
		}
		$("#image_nm").focus();
		return;
	}
	
	if(confirm("등록 하시겠습니까?")){
	    $.ajax({
	        type: 'POST',
	        url: url+'/analysisImagesInsert',
	        dataType: 'json',
	        contentType: 'application/json; charset=utf-8',
	        data: JSON.stringify(data),
	    }).done(function (data) {
	  		let message = JSON.stringify(data.return_msg);
	  		alert(message.replace(/\"/gi, ''));    	
	  		jsList();
	  		
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });	
	}
	
}

//도커 이미지 목록 조회
const dockerImagesGet = function () {
	
	let docker_image_nm = isEmpty($("#docker_image_nm").val());
	
	if(docker_image_nm == '') {
        alert('도커 이미지명을 입력하세요!');
        $("#docker_image_nm").focus();
        return;
    }
	
	const data = {
   		url: '/services/sandbox/docker-images/get?search=docker_image_nm:'+docker_image_nm+'&page_current=&sizePerPage=10&sort=creatDatetime:desc',
   		user_id: 'user00',	
   		menu_id: 'menu_id',
    };		
    $.ajax({
        type: 'POST',
        url: url+'/dockerImagesGet',
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        data: JSON.stringify(data)
    }).done(function (data) {
    	
	  	  if (data != null) {
	  		$("#dockerImage").empty();
  	    	
  	    	if(data.contents != ""){
  	    		
		  	    $.each(data.contents, function (idx, el) {
	     	      let insertTr = "<tr>";
	     		      insertTr += ' <td><input type="radio" name="docker_image_id" value="'+el.docker_image_id+'" onclick="analysisDockerImageProgramGet('+el.docker_image_id+')"></td>';
	     		      insertTr += ' <td>'+el.docker_image_nm+'</td>';
	                  insertTr += '</tr>';
	         	   	  $("#dockerImage").append(insertTr);
		  	    });
  	    	}
	  	  }
    	  
    }).fail(function (error) {
        alert(JSON.stringify(error));
    });	
}

//도커 이미지 프로그램 조회
const analysisDockerImageProgramGet = function (docker_image_id){
	
	const data = {
       		url: '/services/sandbox/analysis-images/docker-images/'+docker_image_id+'/programs/get',
       		user_id: 'user00',	
       		menu_id: 'menu_id',
        };
	
    $.ajax({
        type: 'POST',
        url: url+'/analysisDockerImageProgramGet',
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        data: JSON.stringify(data),
        async: false
    }).done(function (data) {
	 	if (data != null) {
	 		$("#docker_image_program").empty();
	 		if(data.contents != ""){
	 			$.each(data.contents, function (idx, el) {
	 				let insertTr = "<tr>";
		      		insertTr += ' <td>'+el.progrm_nm+'</td>';
		      		insertTr += ' <td>'+el.version+'</td>';
		      		insertTr += ' <td>'+el.port_use_yn+'</td>';
		      		insertTr += ' <td>'+el.bass_port+'</td>';
	         		insertTr += '</tr>';
		   	  		$("#docker_image_program").append(insertTr);
	 			});
	 		}
	 		
	 	}
    }).fail(function (error) {
        alert(JSON.stringify(error));
    });
}

//분석 이미지 목록 페이지 이동
const jsList = function(){
	location.href = '/sandbox/env/analysisImage/list';
}

//엔터키가 눌렸을 때
const enterkey = function(e) {
	if (e.keyCode == 13) {
		dockerImagesGet();
    }
}

//공통코드
commonCodeAnalysisUsePurpose();

</script>

